services:
  geolocation-postgres:
    image: 'postgis/postgis:latest'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: scala
      POSTGRES_PASSWORD: scala
      POSTGRES_DB: geolocation
    networks:
      - geolocation-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]

  geolocation:
    image: 'geolocation:latest'
    ports:
      - '8080:8080'
    environment:
      DB_HOST: geolocation-postgres
      DB_PORT: 5432
      DB_USERNAME: scala
      DB_PASSWORD: scala
      DB_DATABASE: geolocation
      ## For logging to stdout instead of to a collector
      #OTEL_TRACES_EXPORTER: logging
      #OTEL_METRICS_EXPORTER: logging
      #OTEL_LOGS_EXPORTER: logging
      OTEL_SERVICE_NAME: geolocation
      OTEL_METRIC_EXPORT_INTERVAL: 15000
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://192.168.1.137:4317"
    depends_on:
      geolocation-postgres:
        condition: service_healthy
        restart: true
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    networks:
      - geolocation-network

networks:
  geolocation-network:
    driver: bridge
